{"version":3,"sources":["components/Section/Section.js","components/Controls/Contols.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/Controls/Controls.module.css"],"names":["Section","title","children","Controls","onLeaveFeedback","options","className","s","feedbackControl","map","item","type","onClick","name","Notification","message","Statistics","good","bad","neutral","total","precent","App","useState","setGood","setBad","setNeutral","setTotal","useEffect","target","prevState","Math","trunc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+OAeeA,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACGD,GAAS,6BAAKA,IACdC,M,gBCgBQC,MAjBf,YAAiD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACnC,OACE,cAAC,EAAD,CAASC,UAAWC,IAAEC,gBAAiBP,MAAM,wBAA7C,SACGI,EAAQI,KAAI,SAAAC,GAAI,OACf,wBAAmBC,KAAK,SAASC,QAASR,EAAiBS,KAAMH,EAAjE,SACGA,GADUA,S,gBCCNI,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCyCEC,MAtCf,YAA6D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC/C,OACE,eAAC,EAAD,CAASpB,MAAM,aAAf,UACE,cAAC,EAAD,CAAcc,QAAQ,sBACtB,+BACE,qBAAIT,UAAWC,IAAEG,KAAjB,UACE,sCACA,4BAAIO,OAEN,qBAAIX,UAAWC,IAAEG,KAAjB,UACE,yCACA,4BAAIS,OAEN,qBAAIb,UAAWC,IAAEG,KAAjB,UACE,qCACA,4BAAIQ,OAEN,qBAAIZ,UAAWC,IAAEG,KAAjB,UACE,uCACA,4BAAIU,OAEN,qBAAId,UAAWC,IAAEG,KAAjB,UACE,yCACA,4BAAIW,cC6BCC,MArDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNN,EADM,KACAO,EADA,OAESD,mBAAS,GAFlB,mBAENL,EAFM,KAEDO,EAFC,OAGiBF,mBAAS,GAH1B,mBAGNJ,EAHM,KAGGO,EAHH,OAIaH,mBAAS,GAJtB,mBAINH,EAJM,KAICO,EAJD,KAoCb,OAdAC,qBAAU,WAGRD,EAH8BR,EAASD,EAAKD,KAAO,CAACC,EAAKD,EAAME,IAe/D,qCACE,cAAC,EAAD,CACEf,gBAjCiB,SAAC,GAEtB,OAFqC,EAAbyB,OACJhB,MAElB,IAAK,OACHW,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,MACHL,EAAOP,EAAM,GACb,MACF,IAAK,UACHQ,EAAWP,EAAU,GACrB,MACF,QACE,SAqBAd,QAAS,CAAC,OAAQ,UAAW,SAE/B,cAAC,EAAD,CACEY,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTC,MAAOA,EACPC,QAlBU,IAAVD,EACK,EAEAW,KAAKC,MAAOf,EAAOG,EAAS,WCzB1Ba,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,K,kBCXAc,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,qC","file":"static/js/main.5bd45de7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Section from '../Section';\r\nimport s from './Controls.module.css';\r\n\r\nfunction Controls({ onLeaveFeedback, options }) {\r\n  return (\r\n    <Section className={s.feedbackControl} title=\"Please leave feedback\">\r\n      {options.map(item => (\r\n        <button key={item} type=\"button\" onClick={onLeaveFeedback} name={item}>\r\n          {item}\r\n        </button>\r\n      ))}\r\n    </Section>\r\n  );\r\n}\r\n\r\nControls.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Controls;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Section from '../Section';\r\nimport s from './Statistics.module.css';\r\nimport Notification from '../Notification';\r\n\r\nfunction Statistics({ good, bad, neutral, total, precent }) {\r\n  return (\r\n    <Section title=\"Statistics\">\r\n      <Notification message=\"No feedback given\" />\r\n      <ul>\r\n        <li className={s.item}>\r\n          <p>Good:</p>\r\n          <p>{good}</p>\r\n        </li>\r\n        <li className={s.item}>\r\n          <p>Neutral:</p>\r\n          <p>{neutral}</p>\r\n        </li>\r\n        <li className={s.item}>\r\n          <p>Bad:</p>\r\n          <p>{bad}</p>\r\n        </li>\r\n        <li className={s.item}>\r\n          <p>Total:</p>\r\n          <p>{total}</p>\r\n        </li>\r\n        <li className={s.item}>\r\n          <p>Precent:</p>\r\n          <p>{precent}</p>\r\n        </li>\r\n      </ul>\r\n    </Section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  // neutral: PropTypes.number.isRequired,\r\n  // total: PropTypes.number.isRequired,\r\n  // precent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import { useState, useEffect } from 'react';\n\nimport Controls from './Controls';\nimport Statistics from './Statistics';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const incrementValue = ({ target }) => {\n    const name = target.name;\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  useEffect(() => countTotalValue(neutral, bad, good), [bad, good, neutral]);\n\n  function countTotalValue(a, b, c) {\n    setTotal(a + b + c);\n  }\n\n  function incrementPrecentValue() {\n    if (total === 0) {\n      return 0;\n    } else {\n      return Math.trunc((good / total) * 100);\n    }\n  }\n\n  return (\n    <>\n      <Controls\n        onLeaveFeedback={incrementValue}\n        options={['good', 'neutral', 'bad']}\n      />\n      <Statistics\n        good={good}\n        bad={bad}\n        neutral={neutral}\n        total={total}\n        precent={incrementPrecentValue()}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1rlOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackControl\":\"Controls_feedbackControl__3Ulri\"};"],"sourceRoot":""}